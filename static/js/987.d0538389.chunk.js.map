{"version":3,"file":"static/js/987.d0538389.chunk.js","mappings":"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","sources":["components/PhonebookForm/PhonebookForm.style.jsx","Redux/selectors.js","components/PhonebookForm/PhonebookForm.jsx","components/PhonebookList/PhonebookList.styled.jsx","components/PhonebookList/PhonebookList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/MyContact/MyContacts.module.css?3079","components/MyContact/MyContacts.jsx","Pages/ContactsPage/ContactsPage.jsx","../node_modules/shortid/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormPhonebook = styled.div`\ndisplay: flex;\njustify-content: center;\n`\n\nexport const PhonebookFormLabel = styled.label`\nfont-family: Kdam Thmor Pro;\nfont-size: 16px;\nmargin-right: 10px;\n`;\n\nexport const PhonebookFormInput = styled.input`\nwidth: 150px;\nheight: 26px;\nmargin-left: 10px;\n`;\n\n\nexport const ButtonForm = styled.button`\ndisplay: inline-flex;\npadding:0;\njustify-content: center;\nalign-items: center;\nwidth: 115px;\nheight: 32px;\nleft: 0px;\ntop: 0px;\nbackground: #FFFFFF;\nborder-radius: 15px;\n\n\nfont-family: 'Quicksand';\nfont-style: normal;\nfont-weight: 700;\nfont-size: 18px;\nline-height: 22px;\ncolor: #000000;\ntransition: box-shadow 0.3s, transform 0.3s;\ncursor: pointer;\n&:hover, focus, active {\ntransform: translateY(-4px);\nbox-shadow: 0 4px 12px rgba(0,0,0,0.2), 0 16px 20px rgba(0,0,0,0.2);\ncolor: #000;\n}\n`;","export const getContacts = ({ contacts }) => contacts.items;\n\nexport const getFilter = ({ filter }) => filter;\n\nexport const getVisibleFilter = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  return contacts.items.filter(el =>\n    el.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};","import { useState } from \"react\";\nimport shortid from \"shortid\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { PhonebookFormLabel, PhonebookFormInput, ButtonForm } from \"./PhonebookForm.style\";\nimport { getVisibleFilter } from \"Redux/selectors\";\nimport { addContact } from \"Redux/contacts-operations\";\n\n\n\nexport default function Phonebook() {\n    const initialState = {\n        name: '',\n        number: '',\n    };\n\n    const [state, setState] = useState({ ...initialState });\n    const { name, number } = state;\n\n    const nameInputId = shortid.generate();\n    const numberInputId = shortid.generate();\n\n    const contacts = useSelector(getVisibleFilter);\n\n    const dispatch = useDispatch();\n\n    const onAddContacts = (payload) => {\n        const existingContact = contacts.find(\n            el => el.name.toLocaleLowerCase() === payload.name.toLocaleLowerCase()\n        );\n        if (existingContact) {\n            alert(`${payload.name} is already in your contacts`);\n            return;\n        }\n        dispatch(addContact(payload));\n    };\n\n    const handleChange = ({ target }) => {\n        const { name, value } = target;\n        setState(prevState => ({\n            ...prevState,\n            [name]: value,\n        }));\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        onAddContacts({ ...state });\n        setState({ ...initialState });\n    };\n\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <form onSubmit={handleSubmit}>\n                <PhonebookFormLabel htmlFor={nameInputId}>\n                    Contact\n                    <PhonebookFormInput\n                        type=\"text\"\n                        name=\"name\"\n                        value={name}\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        onChange={handleChange}\n                        id={nameInputId}\n                    />\n                </PhonebookFormLabel>\n                <PhonebookFormLabel htmlFor={numberInputId}>\n                    Telephone\n                    <PhonebookFormInput\n                        type=\"tel\"\n                        name=\"number\"\n                        value={number}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        onChange={handleChange}\n                        id={numberInputId}\n                    />\n                </PhonebookFormLabel>\n                <ButtonForm type=\"submit\">Add contact</ButtonForm>\n            </form>\n        </div>\n    );\n}\n\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\ndisplay: inline-flex;\npadding:0;\nmargin-left: 15px;\njustify-content: center;\nalign-items: center;\nwidth: 115px;\nheight: 32px;\nleft: 0px;\ntop: 0px;\nbackground: #FFFFFF;\nborder-radius: 15px;\n\n\nfont-family: 'Quicksand';\nfont-style: normal;\nfont-weight: 700;\nfont-size: 18px;\nline-height: 22px;\ncolor: #000000;\ntransition: box-shadow 0.3s, transform 0.3s;\ncursor: pointer;\n&:hover, focus, active {\ntransform: translateY(-4px);\nbox-shadow: 0 4px 12px rgba(0,0,0,0.2), 0 16px 20px rgba(0,0,0,0.2);\ncolor: #000;\n}\n`;\n\nexport const ContactList = styled.ul`\nlist-style:none;\n`\n\nexport const InfoContact = styled.span`\nfont-family: Kdam Thmor Pro;\nfont-size: 16px;\n`\n\nexport const List = styled.li`\nmargin-bottom: 10px;\n`","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getVisibleFilter } from \"Redux/selectors\";\nimport { removeContact } from \"Redux/contacts-operations\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"Redux/contacts-operations\";\nimport { Button, InfoContact, ContactList, List } from \"./PhonebookList.styled\";\n\nconst PhonebookList = () => {\n    const contacts = useSelector(getVisibleFilter);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    const onRemoveContacts = (payload) => {\n        dispatch(removeContact(payload));\n    }\n\n    return (\n        <div>\n            <ContactList>\n                {contacts.map(({ id, name, number }) => (\n                    <List key={id}>\n                        <InfoContact>{name}: </InfoContact>\n                        <InfoContact>{number}</InfoContact>\n                        <Button type=\"button\" onClick={() => onRemoveContacts(id)}>Delete</Button>\n                    </List>))}\n            </ContactList>\n        </div>\n    )\n}\n\nexport default PhonebookList;\n\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\nfont-family: Kdam Thmor Pro;\nfont-size: 16px;\n`;\n\n\n\nexport const FilterInput = styled.input`\nwidth: 150px;\nheight: 26px;\nmargin-left: 10px;\n`;","import React from \"react\";\nimport { FilterLabel, FilterInput } from \"./Filter.styled\";\nimport { useDispatch } from \"react-redux\";\nimport { setFilter } from \"Redux/filterSlice\";\n\nconst Filter = ({ value }) => {\n   const dispatch = useDispatch();\n\n     const onSetFilter = ({target}) => {\n    dispatch(setFilter(target.value))\n  }\n    return (\n        <div>\n        <h2>Contacts</h2>\n    <FilterLabel>\n        Find contacts by name <FilterInput type='text' name=\"filter\" id=\"filter\" value={value} onChange={onSetFilter}></FilterInput>\n            </FilterLabel>\n            </div>)\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapContacts\":\"MyContacts_wrapContacts__g9ZdW\"};","import Phonebook from \"../../components/PhonebookForm/PhonebookForm\";\nimport PhonebookList from \"../../components/PhonebookList/PhonebookList\";\nimport Filter from \"../../components/Filter/Filter\";\nimport styles from \"./MyContacts.module.css\"\n\n\nconst MyContacts = () => {\n    return (\n        <div className={styles.wrapContacts}>\n            <Phonebook />\n            <Filter />\n            <PhonebookList />\n        </div>\n    )\n};\n\nexport default MyContacts;","import MyContacts from \"components/MyContact/MyContacts\";\n\n\nconst ContactsPage = () => {\n    return (\n        <div>\n            <MyContacts/>\n        </div>\n    )\n};\n\nexport default ContactsPage;","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n"],"names":["PhonebookFormLabel","styled","PhonebookFormInput","ButtonForm","getVisibleFilter","contacts","filter","items","el","name","toLowerCase","includes","Phonebook","initialState","number","useState","state","setState","nameInputId","shortid","numberInputId","useSelector","dispatch","useDispatch","handleChange","target","value","prevState","onSubmit","event","payload","preventDefault","find","toLocaleLowerCase","alert","addContact","htmlFor","type","pattern","title","required","onChange","id","Button","ContactList","InfoContact","List","useEffect","fetchContacts","map","onClick","removeContact","FilterLabel","FilterInput","setFilter","className","styles","module","exports","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","length","Error","unique","split","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","get","characters","seed","lookup","index","counter","previousSeconds","generate","clusterWorkerId","str","seconds","Date","now","random","format","done","loopCounter","pow","build","isValid","seedValue","worker","workerId","newCharacters","undefined","RegExp","replace","test","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","_seed_","mask","log","LN2","step"],"sourceRoot":""}