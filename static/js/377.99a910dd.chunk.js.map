{"version":3,"file":"static/js/377.99a910dd.chunk.js","mappings":"0LAGO,IAAMA,EAAe,CACxBC,KAAM,GACNC,MAAO,GACPC,SAAU,I,mBCuBd,EA1BqB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpB,GAA8CC,EAAAA,EAAAA,GAAQ,CAAEL,aAAAA,EAAcI,SAAAA,IAA9DE,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAErBP,EAA0BK,EAA1BL,KAAMC,EAAoBI,EAApBJ,MAAOC,EAAaG,EAAbH,SAErB,OACI,kBAAMM,OAAO,GAAGL,SAAUI,EAA1B,WACI,4BACI,kBAAOE,QAAQ,GAAf,mBACA,kBAAOC,MAAOV,EAAMA,KAAK,OAAOW,SAAUL,EAAcM,KAAK,OAAOC,YAAY,YAAYC,UAAQ,QAExG,4BACI,kBAAOL,QAAQ,GAAf,oBACA,kBAAOC,MAAOT,EAAOD,KAAK,QAAQW,SAAUL,EAAcM,KAAK,QAAQC,YAAY,QAAQC,UAAQ,QAEvG,4BACI,kBAAOL,QAAQ,GAAf,uBACA,kBAAOC,MAAOR,EAAUF,KAAK,WAAWW,SAAUL,EAAcM,KAAK,WAAWC,YAAY,QAAQC,UAAQ,QAEhH,0BACI,mBAAQF,KAAK,SAAb,4B,wCCOhB,EAtBqB,WACjB,IAAMG,GAAWC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,GAAvBF,OACFG,GAAUF,EAAAA,EAAAA,IAAYG,EAAAA,GAC5BC,QAAQC,IAAIH,GAMZ,OAAIA,GACO,SAAC,KAAD,CAAUI,GAAG,eAIpB,4BACI,SAAC,EAAD,CAAcrB,SAVH,SAACsB,GAChBV,GAASW,EAAAA,EAAAA,GAAOD,OAUXR,IAAU,sC,4ECzBhB,IAAME,EAAe,SAAC,GAAD,SAAGQ,KAAgBC,OAAS,IAC3CP,EAAS,SAAC,GAAD,SAAGM,KAAgBP,U,gECsBzC,IArBgB,SAAC,GAA8B,IAA7BrB,EAA4B,EAA5BA,aAAcI,EAAc,EAAdA,SAC5B,GAA0B0B,EAAAA,EAAAA,WAAS,UAAI9B,IAAvC,eAAOM,EAAP,KAAcyB,EAAd,KAiBA,MAAO,CAACzB,MAAAA,EAAOyB,SAAAA,EAAUxB,aAfJ,SAAC,GAAc,IAAbyB,EAAY,EAAZA,OACX/B,EAA+B+B,EAA/B/B,KAAMU,EAAyBqB,EAAzBrB,MAAOE,EAAkBmB,EAAlBnB,KAAMoB,EAAYD,EAAZC,QACrBC,EAAqB,aAATrB,EAAuBoB,EAAUtB,EACnDoB,GAAS,SAAAI,GAAS,yBACXA,GADW,cAEblC,EAAOiC,QAUuB1B,aANlB,SAAC4B,GAClBA,EAAEC,iBACFjC,GAAS,UAAIE,IACbyB,GAAS,UAAI/B","sources":["Modules/RegisterForm/initialstate.jsx","Modules/RegisterForm/RegisterForm.jsx","Pages/RegisterPage/RegisterPage.jsx","Redux/auth/auth-selectors.js","hooks/useForm.js"],"sourcesContent":["\n\n\nexport const initialState = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n};","import { initialState } from \"./initialstate\";\nimport useForm from \"hooks/useForm\";\n\nconst RegisterForm = ({ onSubmit }) => {\n    const { state, handleChange, handleSubmit } = useForm({ initialState, onSubmit });\n\n    const { name, email, password } = state;\n\n    return (\n        <form action=\"\" onSubmit={handleSubmit}>\n            <div>\n                <label htmlFor=\"\">Name</label>\n                <input value={name} name=\"name\" onChange={handleChange} type=\"text\" placeholder=\"Name user\" required />\n            </div>\n            <div>\n                <label htmlFor=\"\">Email</label>\n                <input value={email} name=\"email\" onChange={handleChange} type=\"email\" placeholder=\"Email\" required />\n            </div>\n            <div>\n                <label htmlFor=\"\">Password</label>\n                <input value={password} name=\"password\" onChange={handleChange} type=\"password\" placeholder=\"Email\" required />\n            </div>\n            <div>\n                <button type=\"submit\">Register</button>\n            </div>\n        </form>\n    )\n};\n\nexport default RegisterForm;","import RegisterForm from \"Modules/RegisterForm/RegisterForm\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { signup } from \"Redux/auth/auth-operations\";\nimport { getAuthError } from \"Redux/auth/auth-selectors\";\nimport { isAuth } from \"Redux/auth/auth-selectors\";\n\n\nconst RegisterPage = () => {\n    const dispatch = useDispatch();\n    const { status } = useSelector(getAuthError);\n    const isLogin = useSelector(isAuth);\n    console.log(isLogin);\n\n    const onRegister = (data) => {\n        dispatch(signup(data));\n    };\n\n    if (isLogin) {\n        return <Navigate to=\"/contacts\"/>\n    }\n\n    return (\n        <div>\n            <RegisterForm onSubmit={onRegister} />\n            {status && <p>Error</p>}\n        </div>\n    )\n};\n\nexport default RegisterPage;","export const getAuthError = ({ auth }) => auth.error || {};\nexport const isAuth = ({ auth }) => auth.isLogin;","import { useState } from \"react\";\n\nconst useForm = ({initialState, onSubmit}) => {\n    const [state, setState] = useState({...initialState});\n\n    const handleChange = ({target}) => {\n        const { name, value, type, checked } = target;\n        const newValue = (type === \"checkbox\") ? checked : value;\n        setState(prevState => ({\n            ...prevState,\n            [name]: newValue\n        }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        setState({...initialState})\n    };\n\n    return {state, setState, handleChange, handleSubmit}\n}\n\nexport default useForm;"],"names":["initialState","name","email","password","onSubmit","useForm","state","handleChange","handleSubmit","action","htmlFor","value","onChange","type","placeholder","required","dispatch","useDispatch","status","useSelector","getAuthError","isLogin","isAuth","console","log","to","data","signup","auth","error","useState","setState","target","checked","newValue","prevState","e","preventDefault"],"sourceRoot":""}